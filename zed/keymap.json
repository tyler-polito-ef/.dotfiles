[
  {
    // HACK: I want this so I can use ctrl+j/k to move inside the file finder and `"context": "FileFinder && !menu_open",` context does not work so I leave it off here. This is mostly for the filepicker
    "bindings": {
      "ctrl-j": "menu::SelectNext",
      "ctrl-k": "menu::SelectPrevious"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "shift-l": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePreviousItem",
      "ctrl-p": "file_finder::Toggle",
      "ctrl-r": "editor::Redo",
      "ctrl-i": "assistant::InlineAssist",
      "] e": "editor::GoToDiagnostic",
      "[ e": "editor::GoToPreviousDiagnostic",
      "ctrl-alt-h": "pane::SwapItemLeft",
      "ctrl-alt-l": "pane::SwapItemRight",
      // Treat " ' " as vim leader (designed to mirror my neovim/lazy vim keybindings)
      "' e": "pane::RevealInProjectPanel",
      "' g": "git_panel::ToggleFocus",
      "' b": "workspace::ToggleLeftDock",
      "' l f": "editor::Format",
      "' f t": "workspace::NewCenterTerminal",
      "' c r": "editor::Rename",
      "' s s": "workspace::SaveWithoutFormat",
      "' w": "pane::CloseActiveItem",
      "' s w": "pane::DeploySearch",
      "' c a": "editor::ToggleCodeActions",
      "' c s": "editor::FindAllReferences",
      "' u h": "editor::ToggleInlayHints",
      "' k w": "pane::CloseAllItems",
      "' k w r": "pane::CloseItemsToTheRight",
      "' r s": "editor::RestartLanguageServer",
      "' g b": "git::Blame",
      "' g g": [
        "task::Spawn",
        {
          "task_name": "lazygit",
          "reveal_target": "center"
        }
      ],
      // Tasks
      "shift-alt-l": ["task::Spawn", { "task_name": "Run localize command" }],
      "shift-alt-b": [
        "task::Spawn",
        { "task_name": "Run typecheck:vscode command" }
      ]
    }
  },
  {
    "context": "FileFinder && !menu_open",
    "bindings": {
      "tab": "menu::SelectNext",
      "shift-tab": "menu::SelectPrevious"
    }
  },
  {
    "context": "Editor && vim_mode == insert && edit_prediction && !showing_completions",
    "use_key_equivalents": true,
    "bindings": {
      "tab": null,
      "cmd-y": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "tab": null,
      "cmd-y": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      "j": ["vim::Down", { "display_lines": true }],
      "g j": "vim::Down",
      "k": ["vim::Up", { "display_lines": true }],
      "g k": "vim::Up"
    }
  },
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "ctrl-j": "editor::ContextMenuNext",
      "ctrl-k": "editor::ContextMenuPrevious"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "g c c": "editor::ToggleComments",
      "shift-k": "editor::Hover"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      "$": "vim::EndOfLineDownward"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "cmd-shift-l": "pane::ActivateNextItem",
      "cmd-shift-h": "pane::ActivatePreviousItem"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "ctrl-p": "file_finder::Toggle",
      "ctrl-shift-p": "command_palette::Toggle"
    }
  },
  {
    // netrw compatibility
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "shift-a": "project_panel::NewDirectory",
      "d": "project_panel::Delete",
      "r": "project_panel::Rename"
    }
  }
]
