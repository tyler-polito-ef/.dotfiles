{
  // ==============
  //  Editor & Workbench
  // ==============
  "editor.tabSize": 2,
  "editor.fontFamily": "JetBrainsMono Nerd Font Mono",
  "editor.fontLigatures": true,
  "editor.wordWrap": "on",
  "editor.suggestSelection": "first",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.guides.bracketPairsHorizontal": false,
  "editor.formatOnPaste": false,
  "editor.inlineSuggest.enabled": true,
  "editor.cursorBlinking": "phase",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.formatOnSave": true,
  "editor.fontSize": 16,
  "editor.cursorSurroundingLines": 15,
  "editor.lineNumbers": "relative",
  "workbench.editor.wrapTabs": true,
  "workbench.colorTheme": "Dracula Theme",
  "workbench.iconTheme": "bearded-icons",
  "workbench.activityBar.location": "top",
  "workbench.colorCustomizations": {
    "editor.background": "#000",
    "editorGutter.background": "#000",
    "editorBracketHighlight.unexpectedBracket.foreground": "#da7070",
    "editorBracketHighlight.foreground1": "#ffd700",
    "editorBracketHighlight.foreground2": "#da70d6",
    "editorBracketHighlight.foreground3": "#87ceeb",
    "editorBracketHighlight.foreground4": "#ffd700",
    "editorBracketHighlight.foreground5": "#da70d6",
    "editorBracketHighlight.foreground6": "#87ceeb"
  },

  // ==============
  // Terminal
  // ==============
  "terminal.integrated.fontSize": 16,

  // ==============
  //  Explorer
  // ==============
  "explorer.confirmDelete": false,

  // ==============
  // Vim
  // ==============
  "vim.leader": "'",
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": false,
  "vim.hlsearch": false,
  "vim.highlightedyank.color": "rgba(250, 240, 170, 0.5)",
  "vim.highlightedyank.enable": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    // TODO: Should try and figure this out
    // {
    //   "before": ["/"],
    //   "commands": ["actions.find"],
    //   "when": "editorFocus || editorIsOpen"
    // },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"],
      "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "w"],
      "commands": ["workbench.action.closeActiveEditor"],
      "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "s", "s"],
      "commands": ["workbench.action.files.saveWithoutFormatting"],
      "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "k", "w"],
      "commands": ["workbench.action.closeAllEditors"],
      "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"],
      "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "l", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<leader>", "f", "t"],
      "commands": ["workbench.action.createTerminalEditor"]
    },
    {
      "before": ["<leader>", "r"],
      "commands": ["mdb.runAllPlaygroundBlocks"],
      "when": "mdb.isPlayground"
    },

    {
      "before": ["<leader>", "c", "r"],
      "commands": ["editor.action.rename"],
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
      "before": ["<leader>", "c", "s"],
      "commands": ["references-view.findReferences"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.files.action.focusFilesExplorer"]
    },
    {
      "before": ["<leader>", "g"],
      "commands": ["workbench.scm.focus"]
    },
    {
      "before": ["<leader>", "b"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "|"],
      "commands": ["workbench.action.splitEditor"],
      "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },

    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["U"],
      "commands": ["redo"]
    },
    {
      "before": ["]", "e"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["[", "e"],
      "commands": ["editor.action.marker.prev"]
    },

    // Movement
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["g", "j"],
      "after": ["j"]
    },
    {
      "before": ["g", "k"],
      "after": ["k"]
    },

    // Harpoon
    {
      "before": ["<leader>", "a"],
      "commands": ["vscode-harpoon.addEditor"]
    },
    {
      "before": ["<leader>", "E"],
      "commands": ["vscode-harpoon.editorQuickPick"]
    },
    {
      "before": ["<leader>", "p", "e"],
      "commands": ["vscode-harpoon.editEditors"]
    },
    {
      "before": ["<leader>", "1"],
      "commands": ["vscode-harpoon.gotoEditor1"]
    },
    {
      "before": ["<leader>", "2"],
      "commands": ["vscode-harpoon.gotoEditor2"]
    },
    {
      "before": ["<leader>", "3"],
      "commands": ["vscode-harpoon.gotoEditor3"]
    }
  ],
  // HACK: Prevent '$' from moving the cursor to the next line
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["$"],
      "after": ["g", "_"]
    },
    {
      "before": ["g", "_"],
      "after": ["$"]
    },

    // Movement
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["g", "j"],
      "after": ["j"]
    },
    {
      "before": ["g", "k"],
      "after": ["k"]
    }
  ],

  // ==============
  // Github Copilot & AI
  // ==============
  // "github.copilot.nextEditSuggestions.enabled": true,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": false,
    "gdscript": false
  },
  "chat.agent.enabled": true,
  // ==============
  // Language settings & code formatters
  // ==============
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[graphql]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.organizeImports": "never"
    }
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.organizeImports": "never"
    }
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.organizeImports": "never"
    }
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.organizeImports": "never"
    }
  },
  "[svelte]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[astro]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // ==============
  // Excluded files & folders
  // ==============

  "files.exclude": {
    "node_modules/": true,
    "apps/gat-web/": true
  },

  // ==============
  // Godot tools
  // ==============
  "godotTools.lsp.serverPort": 6005,

  // ==============
  // Github PR
  // ==============
  "githubPullRequests.commentExpandState": "collapseAll",
  "gitlens.advanced.messages": {
    "suppressIntegrationRequestTimedOutWarning": true
  },
  "git.confirmSync": false,
  "githubPullRequests.pullBranch": "never",
  "diffEditor.ignoreTrimWhitespace": false,
  "mdb.confirmDeleteDocument": true,
  "mdb.confirmRunAll": false,
  "git.openRepositoryInParentFolders": "never",
  "errorLens.enabledDiagnosticLevels": ["warning", "info"]
}
